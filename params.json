{"name":"Php-vcr","tagline":"Record your test suite's HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.","body":"![PHP-VCR](https://dl.dropbox.com/u/13186339/blog/php-vcr.png)\r\n\r\n[![Build Status](https://travis-ci.org/adri/php-vcr.png?branch=master)](https://travis-ci.org/adri/php-vcr)\r\n[![Dependency Status](http://www.versioneye.com/user/projects/51512860926e440002004378/badge.png)](http://www.versioneye.com/user/projects/51512860926e440002004378)\r\n\r\nThis is a port of [VCR](http://github.com/vcr/vcr) for ruby.\r\n\r\nRecord your test suite's HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.\r\n\r\n## Features\r\n\r\n* Automatically records and replays your HTTP(s) interactions with minimal setup/configuration code.\r\n* Supports common http functions and extensions\r\n  * everyting using [streamWrapper](http://php.net/manual/en/class.streamwrapper.php): fopen(), fread(), file_get_contents(), ... without any modification\r\n  * [SoapClient](http://www.php.net/manual/en/soapclient.soapclient.php) using your own wrapper class\r\n  * curl(),  using [runkit extension](http://www.php.net/manual/en/book.runkit.php) and `runkit.internal_override=1` in your php.ini\r\n  * Todo: curl_multi()\r\n* The same request can receive different responses in different tests--just use different cassettes.\r\n* Disables all HTTP requests that you don't explicitly allow (except SoapClient if not configured).\r\n* Request matching is configurable based on HTTP method, URI, host, path, body and headers, or you can easily\r\n  implement a custom request matcher to handle any need.\r\n* The recorded requests and responses are stored on disk in a serialization format of your choice\r\n  (currently YAML and JSON are built in, and you can easily implement your own custom serializer)\r\n* Supports PHPUnit annotations.\r\n* Todo: Recorded requests and responses can easily be inspected and edited.\r\n* Todo: Automatically filters confidential or private information like passwords, auth tokens and emails.\r\n* Todo: Automatically re-records cassettes on a configurable regular interval to keep them fresh and current.\r\n* Todo: Has a good documentation ;-)\r\n\r\n## Usage example\r\n\r\nUsing static method calls:\r\n\r\n``` php\r\nclass VCRTest extends \\PHPUnit_Framework_TestCase\r\n{\r\n    public function testShouldInterceptStreamWrapper()\r\n    {\r\n        // After turning on the VCR will intercept all requests\r\n        VCR::turnOn();\r\n\r\n        // Record requests and responses in cassette file 'example'\r\n        VCR::insertCassette('example');\r\n\r\n        // Following request will be recorded once and replayed in future test runs\r\n        $result = file_get_contents('http://example.com');\r\n        $this->assertNotEmpty($result);\r\n\r\n        // To stop recording requests, eject the cassette\r\n        VCR::eject();\r\n\r\n        // Turn off VCR to stop intercepting requests\r\n        VCR::turnOff();\r\n    }\r\n\r\n    public function testShouldThrowExceptionIfNoCasettePresent()\r\n    {\r\n        $this->setExpectedException(\r\n            'BadMethodCallException',\r\n            \"Invalid http request. No cassette inserted. Please make sure to insert \"\r\n            . \"a cassette in your unit test using VCR::insertCassette('name');\"\r\n        );\r\n        VCR::turnOn();\r\n        // If there is no cassette inserted, a request throws an exception\r\n        file_get_contents('http://example.com');\r\n    }\r\n}\r\n```\r\n\r\nYou can use annotations in PHPUnit by using [phpunit-testlistener-vcr](https://github.com/adri/phpunit-testlistener-vcr):\r\n``` php\r\nclass VCRTest extends \\PHPUnit_Framework_TestCase\r\n{\r\n    /**\r\n     * @vcr unittest_annotation_test\r\n     */\r\n    public function testInterceptsWithAnnotations()\r\n    {\r\n        // Requests are intercepted and stored into  tests/fixtures/unittest_annotation_test.\r\n        $result = file_get_contents('http://google.com');\r\n\r\n        $this->assertEquals('This is a annotation test dummy.', $result, 'Call was not intercepted (using annotations).');\r\n\r\n        // VCR is automatically turned on and off.\r\n    }\r\n}\r\n```\r\n\r\n## Installation\r\n\r\nAdd php-vcr to your `composer.json`.\r\n\r\n``` json\r\n  \"adri/php-vcr\": \"dev-master\"\r\n```\r\n``` bash\r\ncomposer install\r\n```\r\n\r\n## Dependencies\r\n\r\nPHP-VCR depends on:\r\n\r\n  * PHP 5.3+\r\n  * Curl extension\r\n  * HTTP library [Guzzle](http://guzzlephp.org)\r\n  * [symfony/yaml](https://github.com/symfony/yaml)\r\n  * [beberlei/assert](https://github.com/beberlei/assert)\r\n  * (optional) runkit extension with `runkit.internal_override=1` in php.ini if you want to intercept curl\r\n\r\nComposer installs all dependencies except extensions like curl or runkit.\r\n\r\n## Run tests\r\n\r\nIn order to run all tests you need to get development dependencies using composer:\r\n\r\n``` php\r\ncomposer install --dev\r\nphpunit ./tests\r\n```\r\n\r\n## Changelog\r\n\r\n * 2013-05-15 Release 1.0.0\r\n * 2013-05-15 Adds PHPUnit annotations using [phpunit-testlistener-vcr](https://github.com/adri/phpunit-testlistener-vcr)\r\n * 2013-05-14 Easier API (static method calls)\r\n * 2013-02-22 Added YAML support\r\n * 2013-02-21 Added custom request matcher\r\n * 2013-02-21 Added JSON storage which uses less memory\r\n * 2013-02-21 Added support for binary data\r\n * 2013-02-20 Added Soap support\r\n * 2013-02-19 Curl hook fixes, more tests\r\n * 2013-02-18 First prototype\r\n\r\n## Copyright\r\nCopyright (c) 2013 Adrian Philipp. Released under the terms of the MIT license. See LICENSE for details.\r\n\r\n<!--\r\nname of the projects and all sub-modules and libraries (sometimes they are named different and very confusing to new users)\r\ndescriptions of all the project, and all sub-modules and libraries\r\n5-line code snippet on how its used (if it's a library)\r\ncopyright and licensing information (or \"Read LICENSE\")\r\ninstruction to grab the documentation\r\ninstructions to install, configure, and to run the programs\r\ninstruction to grab the latest code and detailed instructions to build it (or quick overview and \"Read INSTALL\")\r\nlist of authors or \"Read AUTHORS\"\r\ninstructions to submit bugs, feature requests, submit patches, join mailing list, get announcements, or join the user or dev community in other forms\r\nother contact info (email address, website, company name, address, etc)\r\na brief history if it's a replacement or a fork of something else\r\nlegal notices (crypto stuff)\r\n-->\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}